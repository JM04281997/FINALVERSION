import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Calendar, Clock, Phone } from "lucide-react";
import { format, isToday, isTomorrow } from "date-fns";

export default function UpcomingTasks({ leads, isLoading }) {
  const getUpcomingTasks = () => {
    const tasks = [];
    
    // Add install dates as tasks
    leads.forEach(lead => {
      if (lead.install_date && lead.status === 'install_scheduled') {
        tasks.push({
          id: `install-${lead.id}`,
          type: 'install',
          title: `Install: ${lead.first_name} ${lead.last_name}`,
          date: new Date(lead.install_date),
          lead: lead,
          priority: 'high'
        });
      }
    });

    // Add follow-up tasks for contacted leads
    leads.forEach(lead => {
      if (lead.status === 'contacted') {
        const followupDate = new Date(lead.created_date);
        followupDate.setDate(followupDate.getDate() + 3);
        tasks.push({
          id: `followup-${lead.id}`,
          type: 'followup',
          title: `Follow up: ${lead.first_name} ${lead.last_name}`,
          date: followupDate,
          lead: lead,
          priority: 'medium'
        });
      }
    });

    return tasks
      .sort((a, b) => a.date - b.date)
      .slice(0, 6);
  };

  const tasks = getUpcomingTasks();

  const getDateLabel = (date) => {
    if (isToday(date)) return 'Today';
    if (isTomorrow(date)) return 'Tomorrow';
    return format(date, 'MMM d');
  };

  const priorityColors = {
    low: "bg-gray-100 text-gray-800",
    medium: "bg-blue-100 text-blue-800",
    high: "bg-orange-100 text-orange-800",
    urgent: "bg-red-100 text-red-800"
  };

  return (
    <Card className="shadow-lg border-0">
      <CardHeader>
        <CardTitle className="text-xl font-semibold">Upcoming Tasks</CardTitle>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          {tasks.length === 0 ? (
            <div className="text-center py-8 text-gray-500">
              <Calendar className="w-12 h-12 mx-auto mb-4 text-gray-300" />
              <p>No upcoming tasks</p>
            </div>
          ) : (
            tasks.map((task) => (
              <div key={task.id} className="flex items-start gap-3 p-3 border rounded-lg hover:shadow-sm transition-shadow">
                <div className={`p-2 rounded-full ${task.type === 'install' ? 'bg-green-100' : 'bg-blue-100'}`}>
                  {task.type === 'install' ? (
                    <Calendar className="w-4 h-4 text-green-600" />
                  ) : (
                    <Phone className="w-4 h-4 text-blue-600" />
                  )}
                </div>
                <div className="flex-1 min-w-0">
                  <p className="font-medium text-gray-900 truncate">{task.title}</p>
                  <div className="flex items-center gap-2 mt-1">
                    <span className="text-sm text-gray-500 flex items-center gap-1">
                      <Clock className="w-3 h-3" />
                      {getDateLabel(task.date)}
                    </span>
                    <Badge className={priorityColors[task.priority]} size="sm">
                      {task.priority}
                    </Badge>
                  </div>
                </div>
              </div>
            ))
          )}
        </div>
      </CardContent>
    </Card>
  );
}